public class fortress_tree {

    /*
    성벽들의 정보가 주어질 때 가장 성벽을 많이 넘어야 하는 두 지점 간을 이동하기 위해 몇 번이나 성벽을 넘어야 하는지 계산하는 프로그램을 작성하세요.

    C : (1 <= C <= 100)
    각 테스트 케이스의 첫 줄 : 성벽의 수 N (1 <= N <= 100)
    xi , yi , ri : 그 후 N 줄에는 각 3개의 정수로 각 성벽의 위치와 크기에 대한 정보
        (0 <= xi, yi <= 1000,1 <= ri <= 1000,0 <= i<N)
        i 번 성벽은 (xi, yi) 를 중심으로 하는 반지름 ri 인 원형으로 설치되어 있습니다.
    편의상 모든 성벽의 두께는 0이라고 가정하며, 입력에 주어지는 성벽들은 서로 겹치거나 닿지 않습니다.
    입력에 주어지는 첫 번째 성벽은 외벽이며, 외벽은 입력에 주어지는 모든 다른 성벽을 포함합니다.

    성벽의 내부를 번호로 매기고 포함 관계를 tree의 계층구조로 표현한다.
    linked list
    답은 max(가장 긴 루트-잎 경로의 길이, 가장 긴 잎-잎 경로의 길이)

     */

    public static void main(String[] args) {

    }
}
