spring:
  h2:
    console:
      enabled: true
  jpa:
    show-sql: true # sql 명령들이 실제 db에서 어떻게 동작하는지 log 출력
    properties:
      hibernate:
        format_sql: true # query를 포맷에 맞춰서 출력
    # h2는 자동으로 설정되지만 MySQL은 각각 설정해줘야 함
    generate-ddl: true # 자동으로 엔티티에서 활용하고 있는 테이블을 생성해주는 옵션
    hibernate:
      ddl-auto: create-drop # 옵션 : none, create(영속성 컨텍스트를 띄울 때 drop후 create), create-drop(create 후 영속성 컨텍스트가 사라질 때 Drop), update( 실제 스키마와 비교해서 변경된 내용만 반영), valiatate(단순 비교 후 변경사항이 있으면 오류 발생시킴)
    defer-datasource-initialization: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/book_manager?useSSL=false&allowMultiQueries=true&serverTimezone=UTC # url에 포트와 테이블 지정
    username: root
    password: MySql@2022
    initialization-mode: always # resources 하위에 데이터 파일이 있을 때 로딩하는 설정/ 최우선 시 되는 설정
  sql:
    init:
      mode: always

#generate-ddl
#- jpa 하위 속성
#- 인터페이스에 대한 정의이고, 실제 구현체는 별도로 존재함
#- 구현체와 상관없이 자동화된 ddl을 실행
#
#ddl-auto
#- 위보다 더 세밀한 옵션이라 ddl-auto의 명령을 따름
